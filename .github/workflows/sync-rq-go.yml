name: Sync RQ Go Bindings

on:
  push:
    branches:
      - main
    paths:
      - 'dist/lib/**'
      - 'include/**'
  workflow_dispatch: # Allows manual triggering

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v3
        with:
          path: source-repo
          fetch-depth: 0

      - name: Checkout target repository
        uses: actions/checkout@v3
        with:
          repository: LumeraProtocol/rq-go
          path: target-repo
          token: ${{ secrets.SYNC_PAT }}

      - name: Set up Git identity
        run: |
          git config --global user.name "GitHub Action Bot"
          git config --global user.email "action@github.com"

      - name: Detect changed files
        id: changed-files
        run: |
          cd source-repo
          echo "GITHUB_EVENT_BEFORE: ${{ github.event.before }}"
          echo "GITHUB_EVENT_AFTER: ${{ github.event.after }}"

          # Get the raw list of changed files between the SHAs
          RAW_DIFF_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} || true)
          echo "--- Raw git diff output ---"
          echo "$RAW_DIFF_FILES"
          echo "--- End raw git diff output ---"

          # Filter the raw list for the target paths
          CHANGED_FILES=$(echo "$RAW_DIFF_FILES" | grep -E '^(dist/lib/|include/)' || true)

          echo "Filtered changed files: $CHANGED_FILES"
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Copy changed files to target repository
        if: env.CHANGED_FILES != ''
        run: |
          # Create necessary directories in target repo
          mkdir -p target-repo/lib
          mkdir -p target-repo/include

          # Create platform-specific directories for lib
          mkdir -p target-repo/lib/darwin/amd64
          mkdir -p target-repo/lib/darwin/arm64
          mkdir -p target-repo/lib/linux/amd64
          mkdir -p target-repo/lib/linux/arm64
          mkdir -p target-repo/lib/windows/amd64

          # Process each changed file
          for file in ${{ env.CHANGED_FILES }}; do
            # Handle include files
            if [[ $file == include/* ]]; then
              filename=${file#include/}
              echo "Copying $file to target-repo/include/$filename"
              cp "source-repo/$file" "target-repo/include/$filename"
            # Handle dist/lib files
            elif [[ $file == dist/lib/* ]]; then
              filename=${file#dist/lib/}

              # Skip README and other non-library files - copy them directly
              if [[ $filename == *.md || $filename == *.txt ]]; then
                echo "Copying $file to target-repo/lib/$filename"
                cp "source-repo/$file" "target-repo/lib/$filename"
                continue
              fi

              # Preserve the platform/architecture structure
              platform_dir=$(dirname "$filename")
              if [[ $platform_dir == "." ]]; then
                # File is in the root of dist/lib
                # Determine platform from filename or file inspection
                if [[ $filename == *darwin* || $filename == *.dylib ]]; then
                  # macOS file - determine architecture
                  if file "source-repo/$file" | grep -q "arm64"; then
                    platform_dir="darwin/arm64"
                  else
                    platform_dir="darwin/amd64"
                  fi
                elif [[ $filename == *linux* || $filename == *.so ]]; then
                  # Linux file - determine architecture
                  if file "source-repo/$file" | grep -q "aarch64"; then
                    platform_dir="linux/arm64"
                  else
                    platform_dir="linux/amd64"
                  fi
                elif [[ $filename == *windows* || $filename == *.dll || $filename == *.lib ]]; then
                  platform_dir="windows/amd64"
                else
                  # Default to current platform
                  if [[ $(uname) == "Darwin" ]]; then
                    if [[ $(uname -m) == "arm64" ]]; then
                      platform_dir="darwin/arm64"
                    else
                      platform_dir="darwin/amd64"
                    fi
                  else
                    platform_dir="linux/amd64"
                  fi
                fi
                # Extract just the filename without the path
                base_filename=$(basename "$filename")
                echo "Copying $file to target-repo/lib/$platform_dir/$base_filename"
                cp "source-repo/$file" "target-repo/lib/$platform_dir/$base_filename"
              else
                # File is already in a platform subfolder structure
                echo "Copying $file to target-repo/lib/$filename"
                mkdir -p "target-repo/lib/$(dirname "$filename")"
                cp "source-repo/$file" "target-repo/lib/$filename"
              fi
            else
              continue
            fi
          done

      # We're removing the go.mod update step as we're not handling bindings/go anymore

      - name: Commit and push changes
        run: |
          cd target-repo
          git add .
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sync RQ Go bindings from rq-library"
            git push
          fi
